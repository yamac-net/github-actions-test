name: build

on:
  push:
    branches:
      - develop
      - feature/*
    tags:
      - v*
    paths-ignore:
      - README.md
  workflow_dispatch:
    inputs:
      deploy:
        description: Please type "deploy" to confirm.
        required: true

env:
  DOCKER_IMAGE_NAME: aspnet-test/app
  SERVICE_NAME_BETA: aspnet-test-app-beta
  SERVICE_NAME_PRODUCTION: aspnet-test-app
  SLACK_CHANNEL: notification
  SLACK_USERNAME: GitHub
  SLACK_ICON_URL: https://ca.slack-edge.com/T0E2QBMJ4-U02CH8BM31D-ad5f9ad46e20-192

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Show Environment Variables
      run: env

    - name: Setup Git Environment
      id: git_env
      run: echo ::set-output name=GIT_TAG::${GITHUB_REF#refs/tags/}

    - name: Check workflow_dispatch
      if: github.event_name == 'workflow_dispatch'
      run: |
        if [ '${{ github.event.inputs.deploy }}' != 'deploy' ]; then
          echo "Can not confirm to deploy."
          exit -1
        fi

    - name: Login to Docker Registry
      if: startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/tags/') || github.event.inputs.deploy == 'deploy'
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Docker Build on feature
      if: startsWith(github.ref, 'refs/heads/feature/') && github.event.inputs.deploy != 'deploy'
      uses: docker/build-push-action@v2
      with:
        context: .
        target: test
        push: false

    - name: Docker Build and Push on develop
      if: startsWith(github.ref, 'refs/heads/develop') || github.event.inputs.deploy == 'deploy'
      uses: docker/build-push-action@v2
      with:
        context: .
        target: production
        push: true
        tags: |
          ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:develop

    - name: Docker Build and Push on tags
      if: startsWith(github.ref, 'refs/tags/') && github.event.inputs.deploy != 'deploy'
      uses: docker/build-push-action@v2
      with:
        context: .
        target: production
        push: true
        tags: |
          ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.git_env.outputs.GIT_TAG }}

    - name: Deploy to beta
      if: startsWith(github.ref, 'refs/heads/develop') || github.event.inputs.deploy == 'deploy'
      run: |
        curl -s -X POST \
        -d "op=deploy" \
        -d "svc=${{ env.SERVICE_NAME_BETA }}" \
        -d "token=${{ secrets.DEPLOY_TOKEN }}" \
        -d "tag=develop" \
        https://service.yamac.net/service

    - name: Slack Notification
      if: ${{ always() }}
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          SLACK_COLOR="good"
        else
          SLACK_COLOR="danger"
        fi
        SLACK_ATTACHMENTS="$(jq -n -c \
        --arg color "$SLACK_COLOR" \
        --arg title "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" \
        --arg title_link "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" \
        '[{
            color: $color,
            title: $title,
            title_link: $title_link,
        }]')"
        curl -s -X POST \
        -d "token=${{ secrets.SLACK_TOKEN }}" \
        -d "channel=#${{ env.SLACK_CHANNEL }}" \
        -d "username=${{ env.SLACK_USERNAME }}" \
        -d "icon_url=${{ env.SLACK_ICON_URL }}" \
        -d "attachments=$SLACK_ATTACHMENTS" \
        https://slack.com/api/chat.postMessage
